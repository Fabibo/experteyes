/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ProjectSelectAdvanceSetUpDialog.java
 *
 * Created on Mar 26, 2009, 4:57:45 PM
 */
package buseylab.eyetrackercalibrator.gui;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JTextField;

/**
 *
 * @author ruj
 */
public class ProjectSelectAdvanceSetUpDialog extends javax.swing.JDialog {


    double distanceFromScene = 0;
    double sceneHeightCM = 0;
    double sceneWidthCM = 0;
    String cornerHintDir = "";

    public void setCornerHintsDirectory(String dir){
        this.cornerHintDir = dir;
        this.cornerHintDirTextField.setText(dir);
    }

    public String getCornerHintsDirectory(){
        return this.cornerHintDir;
    }

    /** @return 0 if anything is wrong. Positive double otherwise */
    public double getDistanceFromMonitor() {
        return distanceFromScene;
    }

    public void setDistanceFromMonitor(double distanceFromMonitor) {
        setTextField(distanceFromSceneTextField, distanceFromMonitor);
        this.distanceFromScene = getTextFieldDoubleValue(distanceFromSceneTextField);
    }

    /** @return 0 if anything is wrong. Positive double otherwise */
    public double getSceneHeight() {
        return sceneHeightCM;
    }

    public void setSceneHeight(double monitorHeight) {
        setTextField(sceneHeightCMTextField, monitorHeight);
        this.sceneHeightCM = getTextFieldDoubleValue(sceneHeightCMTextField);
    }

    /** @return 0 if anything is wrong. Positive double otherwise */
    public double getSceneWidth() {
        return sceneWidthCM;
    }

    public void setSceneWidth(double monitorWidth) {
        setTextField(sceneWidthCMTextField, monitorWidth);
        this.sceneWidthCM = getTextFieldDoubleValue(sceneWidthCMTextField);
    }

    /** Creates new form ProjectSelectAdvanceSetUpDialog */
    public ProjectSelectAdvanceSetUpDialog(JFrame owner, String title, boolean modal) {
        super(owner, title, modal);
        initComponents();
    }

    protected void setTextField(JTextField textField, double value) {
        if (value > 0) {
            textField.setText(String.valueOf(value));
        } else {
            textField.setText("");
        }
    }

    protected double getTextFieldDoubleValue(JTextField textField) {
        String text = textField.getText();
        if (text.length() > 0) {
            try {
                return Double.parseDouble(text);
            } catch (NumberFormatException numberFormatException) {
                return 0;
            }
        } else {
            return 0;
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textFieldEmptyPositiveDoubleInputVerifier1 = new buseylab.eyetrackercalibrator.gui.util.TextFieldEmptyPositiveDoubleInputVerifier();
        jPanel1 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        sceneHeightCMTextField = new javax.swing.JTextField();
        distanceFromSceneTextField = new javax.swing.JTextField();
        sceneWidthCMTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cornerHintDirTextField = new javax.swing.JTextField();
        cornerHintLocationBrowseButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("For Calibation Error Computation"));

        jLabel19.setText("cm");

        jLabel18.setText("cm");

        sceneHeightCMTextField.setInputVerifier(textFieldEmptyPositiveDoubleInputVerifier1);

        distanceFromSceneTextField.setInputVerifier(textFieldEmptyPositiveDoubleInputVerifier1);

        sceneWidthCMTextField.setInputVerifier(textFieldEmptyPositiveDoubleInputVerifier1);

        jLabel11.setText("Width");

        jLabel1.setText("Distance from the scene:");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Measured scene size:");

        jLabel10.setText("x Height");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel9, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel11)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sceneWidthCMTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(distanceFromSceneTextField))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel10)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(sceneHeightCMTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel18))
                    .add(jLabel19)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(jLabel11)
                    .add(sceneWidthCMTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel10)
                    .add(sceneHeightCMTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel18))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(distanceFromSceneTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel19)))
        );

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Corner Hints Location:");

        cornerHintLocationBrowseButton.setText("Browse");
        cornerHintLocationBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cornerHintLocationBrowseButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jLabel2)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cornerHintDirTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                    .add(saveButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(cancelButton)
                    .add(cornerHintLocationBrowseButton)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(cornerHintDirTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cornerHintLocationBrowseButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cancelButton)
                    .add(saveButton)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        distanceFromScene = getTextFieldDoubleValue(distanceFromSceneTextField);
        sceneHeightCM = getTextFieldDoubleValue(sceneHeightCMTextField);
        sceneWidthCM = getTextFieldDoubleValue(sceneWidthCMTextField);
        cornerHintDir = this.cornerHintDirTextField.getText();
        this.dispose();
}//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void cornerHintLocationBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cornerHintLocationBrowseButtonActionPerformed
        browseDirectory(cornerHintDirTextField);
    }//GEN-LAST:event_cornerHintLocationBrowseButtonActionPerformed

    private void browseDirectory(JTextField targetField) {
        // Set text box with directory that user chose.
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        if (targetField.getText().length() > 1) {
            // Get current selection from text field
            fileChooser.setSelectedFile(new File(targetField.getText()));
        }

        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            // Save current position
            targetField.setText(fileChooser.getSelectedFile().getAbsolutePath());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField cornerHintDirTextField;
    private javax.swing.JButton cornerHintLocationBrowseButton;
    private javax.swing.JTextField distanceFromSceneTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField sceneHeightCMTextField;
    private javax.swing.JTextField sceneWidthCMTextField;
    private buseylab.eyetrackercalibrator.gui.util.TextFieldEmptyPositiveDoubleInputVerifier textFieldEmptyPositiveDoubleInputVerifier1;
    // End of variables declaration//GEN-END:variables
}
